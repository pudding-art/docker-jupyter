# 把外部访问 http://<域名或IP> 的所有流量 转发给后端 JupyterHub 容器（运行在 jupyterhub:8000）
# 并正确处理 WebSocket 和 CORS。
events {
    worker_connections 1024;
}

http {

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# HTTPS server to handle JupyterHub
server {
    listen 80 default_server;
    server_name _ *.nip.io;  # 支持任何 nip.io 域名和直接 IP 访问
        
    # 开发环境的 CORS 设置
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    #add_header Content-Security-Policy "upgrade-insecure-requests";
   # add_header Strict-Transport-Security max-age=15768000;

    # Managing literal requests to the JupyterHub frontend
    location / {
        proxy_ssl_server_name on;
        proxy_pass http://jupyterhub:8000;  
        proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Scheme $scheme;
    }

}
}